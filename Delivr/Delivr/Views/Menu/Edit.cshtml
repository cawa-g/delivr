@model Delivr.Models.EditMenuModel
@{
    ViewBag.Title = @Resources.Menu.PageTitle;
}


<div class="jumbotron padded">
    <div class="container">
        <h2>@ViewBag.Title</h2>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            if (ViewBag.SuccessMessage != null)
            {
                <div class="alert alert-success" role="alert">
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    @ViewBag.SuccessMessage
                </div>
            }
            @Html.ValidationSummary(true)

            <form>
                @Html.HiddenFor(model => model.MenuId)

                @if (ViewData.ModelState.IsValidField("Nom"))
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.Nom, new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.Nom, new { @class = "form-control" })
                    </div>
                }
                else
                {
                    <div class="form-group has-error">
                        @Html.LabelFor(model => model.Nom, new { @class = "control-label" })
                        @Html.ValidationMessageFor(model => model.Nom, "", new { @class = "text-danger bg-danger", style = "margin-left: 10px" })
                        @Html.TextBoxFor(model => model.Nom, new { @class = "form-control" })
                    </div>
                }

                <div class="form-group">
                    @Html.LabelFor(model => model.MenuItemModels, new { @class = "control-label", style = "width: 100%; border-bottom: solid 1px" })
                    <div class="" id="MenuItemsList">
                        @if (Model.MenuItemModels != null)
                        {
                            foreach (var itemModel in Model.MenuItemModels)
                            {
                                Html.RenderPartial("MenuItemRow", itemModel);
                            }
                        }
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-sm-10 control-label">
                        @Html.ActionLink(Resources.Menu.AddItem, "BlankMenuItemRow", null, new { id = "addItem", @class = "btn btn-default bnt-small margin-top" })
                        <input type="submit" class="btn btn-primary margin-top" value="@Resources.General.Save" />
                    </div>
                </div>
            </form>
        }
    </div>
    <div class="container">
        <hr />
        <div class="btn-group btn-group-lg" role="group" aria-label="controls">
             @if (User.IsInRole("Admin"))
            {
                <div class="btn-group btn-group-lg" role="group">
                    @(Html.ActionLink(Resources.General.BackToListing, "Index", "Restaurant", null, new { @class = "btn btn-default btn-lg" }))
                </div>
                <div class="btn-group btn-group-lg" role="group">
                    @(Html.ActionLink(Resources.General.BackToDetails, "Details", "Restaurant", new { id = Model.RestaurantId }, new { @class = "btn btn-default btn-lg" }))
                </div>
            }
            @if (User.IsInRole("Restaurateur"))
            {
                <div class="btn-group btn-group-lg" role="group">
                    @Html.ActionLink(Resources.Menu.BackToRestaurants, "IndexForRestaurateur", "Restaurant", new { id = WebSecurity.CurrentUserId }, null)
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $("#addItem").click(function () {
            $.ajax({
                url: this.href,
                cache: false,
                success: function (html) { $("#MenuItemsList").append(html); }
            });
            return false;
        });

        $("#MenuItemsList").on("click", "button.removeItem", function () {
            $(this).parents("div.editor-row:first").remove();
            return false;
        });
    </script>
}
